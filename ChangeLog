2020.11.27
	* multi-genome comparison:
		. GFF3 reading implemented, and can save FASTA if included (needed by bwa). Safer is to provide both, however.
		. prokka returns (proper) GFF3 with several contigs (a.k.a. genomes or chromosomes in GFF3 docs)
		. we transform it into a 1D location indexing by flattening contigs into one 'concatenated' sueprcontig (we reserve
		the word "concat" to the concatenation of context_histogram_t though)
		. this does not mean it works with several GFF3 files, and we assume distinct, non-homologous contigs (this would force
		tatajuba to chose one homolog OR the other)
	* TODO:
		1. splitting new_genomic_context_list() into two functions, one before bwa+gff only for identical contexts and one
		after (accounting for similar contexts). Currently it is quadratic on number of unique context+tract elements.
		2. when reading fasta for first time bwa functions complain (non thread safe perhaps)
		3. allow for comparison of non-canonic descriptors (also or alternatively store protein version)
		4. after finding equivalent tract on reference re-check neighbour tracts; also leftmost_hopo_name_from_string()
		could scan _all_ tracts and return closest to input
2020.08.25
	* beta version working: 
		1. imports BWA and gives for each tract a location in reference genome. (BWA creates indices from ref fasta)
		2. merge tracts from same genome based on similarity and location
	* TODO:
		1. needs annotated genome; therefore user gives GFF, we generate the ref fasta that will then be used for bwa
		indexing (DONE 2020.11.27)
		2. aim is to distinguish tracts by their effects on sample; therefore we want to keep track of (a) coding effect (i.e. 
		if tract is on coding region or not); and (b) change in length from reference
2020.02.19
	* Andrew's hints:
		1. if program is slow, we can first map context-mers to a reference and exclude those not in homopolymer tracts; 
		2. check Illumina limits for homopolymers, it might exclude > 10 or something
		3. indeed good idea to exclude unique context-mers (Bloom filter)
		4. Always aim at "one-click" software: run without options and get a useful, interpretable result
2020.01.27
	* first version: maintain kalign; assume histogram per sample (must be normalised)
	* Desiderata: 
		- use location information (relies on BAM/reference): not possible now, but keep in mind that we'll need to locate these changes on reference genome
		- consider canonical form
		- single k-mer may represent error (think Bloom filter); does QC remove these reads?
		- alternative to location information can be flanking k-mers
		- exclude reads beginning or ending with homopolymer (since true size may span another read)
		- therefore it can limit to homopolymers between two 4mers;

		
